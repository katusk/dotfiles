augroup myvimrc_PythonPath_augroup
    autocmd VimEnter * let $PYTHONPATH .=
        \ ':'.expand('~/.vim/bundle/ropemode').
        \ ':'.expand('~/.vim/bundle/ropevim')
augroup END

" Managed plugins
"=========================================================================
call plug#begin('~/.vim/bundle')
" Interoperability
Plug 'jpalardy/vim-slime'
Plug 'editorconfig/editorconfig-vim'
" Color themes
Plug 'altercation/vim-colors-solarized'
Plug 'jnurmine/Zenburn'
Plug 'tomasr/molokai'
" Syntax highlighting
Plug 'octol/vim-cpp-enhanced-highlight'
Plug 'katusk/vim-qkdb-syntax'
Plug 'tmux-plugins/vim-tmux'
" Navigation
Plug 'kien/ctrlp.vim'
Plug 'derekwyatt/vim-fswitch'
Plug 'vim-airline/vim-airline' | Plug 'vim-airline/vim-airline-themes'
Plug 'scrooloose/nerdtree'
Plug 'majutsushi/tagbar'
" Version control
Plug 'airblade/vim-gitgutter'
Plug 'tpope/vim-fugitive'
" Code analysis and completion
Plug 'scrooloose/syntastic'
Plug 'xolox/vim-easytags' | Plug 'xolox/vim-misc'
Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'
Plug 'python-rope/ropevim' | Plug 'python-rope/ropemode'
Plug 'Valloric/YouCompleteMe'
" Pretty printing
Plug 'Chiel92/vim-autoformat'
" Editing
Plug 'tpope/vim-surround'
Plug 'tpope/vim-repeat'
Plug 'Raimondi/delimitMate'
Plug 'tomtom/tcomment_vim'
Plug 'godlygeek/tabular'
call plug#end()

" Plugin mappings              " NB No comment in same line as map command
"=========================================================================
" Explorer bar toggles and CtrlP special
nnoremap <silent> <leader>,n :NERDTreeToggle<CR>
nnoremap <silent> <leader>,t :TagbarToggle<CR>
let g:ctrlp_map='<c-p>'

" GoTo and Get commands with YouCompleteMe and FSwitch
nnoremap <silent> <leader>go :FSHere<CR>
let g:ycm_key_detailed_diagnostics='<leader>gi'
nnoremap <silent> <leader>gg :YcmCompleter GoTo<CR>
nnoremap <silent> <leader>gf :YcmCompleter GoToReferences<CR>
nnoremap <silent> <leader>gd :YcmCompleter GetDoc<CR>

" Autoformat the file (also see gq) and Tabularize with ease
nnoremap <silent> <leader>qf :Autoformat<CR>
nnoremap <leader>qt :Tabularize /
vnoremap <leader>qt :Tabularize /

" Vim-Slime
nnoremap <leader>ss <Plug>SlimeLineSend
xnoremap <leader>ss <Plug>SlimeRegionSend
nnoremap <leader>sp <Plug>SlimeParagraphSend

" Refactor with ropevim
let g:ropevim_local_prefix="<leader>r"
let g:ropevim_global_prefix="<leader>rp"
let g:ropevim_enable_shortcuts=0

" UltiSnips
let g:UltiSnipsExpandTrigger="<leader><Tab>"
let g:UltiSnipsJumpForwardTrigger="<Tab>"
let g:UltiSnipsJumpBackwardTrigger="<S-Tab>"

" Plugin settings
"=========================================================================

" Airline                                                    :help airline
"-------------------------------------------------------------------------
let g:airline_left_sep=''
let g:airline_left_alt_sep=''
let g:airline_right_sep=''
let g:airline_right_alt_sep=''
let g:airline#extensions#tabline#enabled=1
let g:airline#extensions#tabline#left_sep=''
let g:airline#extensions#tabline#left_alt_sep=''
let g:airline#extensions#tabline#right_sep=''
let g:airline#extensions#tabline#right_alt_sep=''

" NERDTree                                                 :help NERD_tree
"-------------------------------------------------------------------------
let NERDTreeMouseMode=2
let NERDTreeDirArrows=0
let NERDTreeShowHidden=1
let NERDTreeMinimalUI=1
let NERDTreeShowBookmarks=1
let NERDTreeBookmarksFile=expand('~/.vim/NERDTreeBookmarks')

" Tagbar                                       majutsushi.github.io/tagbar
"-------------------------------------------------------------------------
let g:tagbar_iconchars=['+', '-']
let g:tagbar_compact=1

" Easytags                               peterodding.com/code/vim/easytags
"-------------------------------------------------------------------------
let g:easytags_dynamic_files=2
let g:easytags_include_members=1
let g:easytags_events=['BufReadPost', 'BufWritePost']
let g:easytags_syntax_keyword='always'
let g:easytags_auto_update=1
let g:easytags_auto_highlight=1
let g:easytags_async=1

" CtrlP                                           kien.github.io/ctrlp.vim
"-------------------------------------------------------------------------
let g:ctrlp_cmd='CtrlP'
let g:ctrlp_show_hidden=1
let g:ctrlp_max_files=4000
let g:ctrlp_lazy_update=120

" Gitgutter                   github.com/airblade/vim-gitgutter/issues/164
"-------------------------------------------------------------------------
highlight clear SignColumn                       " theme color is strange
if exists("*gitgutter#highlight#define_highlights")
    call gitgutter#highlight#define_highlights() " reload gitgutter color
endif

" Syntastic           github.com/scrooloose/syntastic/wiki/Syntax-Checkers
"-------------------------------------------------------------------------
let g:syntastic_auto_loc_list=1
let g:syntastic_check_on_open=1

" EditorConfig                    github.com/editorconfig/editorconfig-vim
"-------------------------------------------------------------------------
let g:EditorConfig_exclude_patterns=['fugitive://.*']

" Vim-Slime                                  github.com/jpalardy/vim-slime
"-------------------------------------------------------------------------
let g:slime_no_mappings=1
let g:slime_default_config={"socket_name": "default", "target_pane": "1"}
if has("win32") || has("win64")
    let g:slime_target="conemu"
else
    let g:slime_target="tmux"
endif
if executable("ipython") &&
    \ exists("*exepath") && exepath("ipython") !~ "cygdrive"
    let g:slime_python_ipython=1
endif

" delimitMate                              github.com/Raimondi/delimitMate
"-------------------------------------------------------------------------
let delimitMate_expand_cr=2
let delimitMate_expand_space=1
let delimitMate_jump_expansion=1
augroup myvimrc_delimitMate_augroup
    au FileType k,q let b:delimitMate_matchpairs = "(:),[:],{:}"
    au FileType k,q let b:delimitMate_quotes = "\""
augroup END

" YouCompleteMe                          github.com/Valloric/YouCompleteMe
"-------------------------------------------------------------------------
let g:ycm_autoclose_preview_window_after_completion=1
let g:ycm_collect_identifiers_from_tags_files=1
let g:ycm_key_list_select_completion=[]
let g:ycm_key_list_previous_completion=[]
let g:ycm_key_invoke_completion = ''

